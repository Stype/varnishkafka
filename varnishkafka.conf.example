#######################################################################
#                                                                     #
#                varnishkafka configuration file                      #
#                                                                     #
#                                                                     #
#######################################################################
#                                                                     #
# Syntax:                                                             #
# <property-name> = <value>                                           #
#                                                                     #
# Boolean property values:                                            #
#   >0, "true", "yes", "on" - interpreted as true                     #
#  everything else          - interpreted as false                    #
#                                                                     #
#######################################################################
                                                                      #
                                                                      #
                                                                      #
#######################################################################
#                                                                     #
# Varnish log formatting                                              #
#                                                                     #
# format.type - format output type, one of:                           #
#  string     - ASCII string output                                   #
#  json       - JSON output                                           #
#                                                                     #
#                                                                     #
# format - format string                                              #
#  %X                                                                 #
#   where 'X' is one of the standard varnishncsa(1) formatters.       #
#   Example: %u                                                       #
#                                                                     #
#                                                                     #
#  %{VAR}X                                                            #
#    Name-Value tokens where X is 'x', 'i' or 'o' and 'VAR' is the    #
#    Name to extract the value for.                                   #
#    Example: %{User-Agent}i                                          #
#                                                                     #
#                                                                     #
#  %{?DEFAULT@FIELD!OPTION!OPTION..}X                                 #
#    where 'X' is any formatter,                                      #
#                                                                     #
#    'DEFAULT' is the default string to use if no tag was matched,    #
#     the default default string is "-".                              #
#                                                                     #
#    'FIELD' is the field name to use with the JSON formatter.        #
#     i.e., "%{@host}l" will be JSON encoded as: {"host":"1.2.3.4"}   #
#                                                                     #
#    'OPTION' is one or more of the formatting options:               #
#        escape - escape non-printable characters to \<octalcode>     #
#                 and \t\n\r\v\f " to their canonical                 #
#                 backslashed notations (\t\n\r\v\f\"\ ).             #
#        num    - for typed formatters, such as JSON, try to encode   #
#                 the value as a number.                              #
#
#                                                                     #
#    This syntax can be combined with %{VAR}X.                        #
#    Example: %{User-Agent?Mozilla!escape}i                           #
#             %{?nouser}u                                             #
#             %{!escape}q                                             #
#             %{@host}l
#                                                                     #
#                                                                     #
#  Non %-prefixed strings are copied verbatim to the                  #
#  output log string.                                                 #
#    Example: "User: %u;"   would render "User: snaps;"               #
#                                                                     #
#                                                                     #
#######################################################################

# Standard string formatter
format.type = string
format = %l        %n        %t        %{Varnish:time_firstbyte}x        %h        %{Varnish:handling}x/%s        %b        %m        http://%{Host}i%U%q        -        %{Content-Type}o        %{Referer}i        %{X-Forwarded-For}i        %{User-agent!escape}i        %{Accept-Language}i        %{X-Analytics}o

# JSON formatter
# JSON field names are specified with %{@FIELDNAME}x
#format.type = json
#format = %{@host}l %{@seq_num!num}n %{@timestamp}t %{Varnish:time_firstbyte@response!num}x %{@ip}h %{Varnish:handling@handling}x %{@http_status}s %{@bytes_sent!num}b %{@request_method}m %{Host@host}i %{@uri}U %{@query}q %{Content-Type@mime_type}o %{Referer@referer}i %{X-Forwarded-For@x_forwarded_for}i %{User-Agent@user_agent}i %{Accept-Language@accept_language}i %{X-Analytics@x_analytics}o



# Where to output varnish log lines:
#  kafka  - (default) send to kafka broker
#  stdout - just print to stdout (behave like varnishncsa)
#  null   - (test) collect all tags specified by format but dont output anything
output = kafka



# Start for sequence number (%n)
# Either a number, or the string "time" which will set it to the current
# unix time in seconds multiplied by 1,000,000.
# Defaults to 0.
sequence.number = time

# FUTURE: read last sequence number from file to allow restarts
#sequence.file = /var/spool/varnishkafka.seq


#
# varnishkafka log messages configuration
# Debugging, error reporting, etc, not to be confused with varnish logs.
#

# varnishkafka log level (1 = emergencies .. 7 = debug)
log.level = 7

# specify log output
log.stderr = true
log.syslog = true



# daemonize varnishkafka (boolean)
daemonize = false


# vaktl socket path
# FIXME: not implemented
#vaktl.path = /var/run/varnishkafka.vaktl


#######################################################################
#                                                                     #
# Standard varnish VSL command line arguments                         #
#                                                                     #
# Syntax:                                                             #
#  varnish.arg.<c> = <value>, where <c> is a command line option.     #
#                                                                     #
# See varnishncsa(1) and varnishlog(1) for valid options.             #
#                                                                     #
#######################################################################

# -m tag:regex
varnish.arg.m = RxRequest:^(?!PURGE$)

# Examples:
# -C: ignore case when matching regex
# Non-value arguments need a dummy value to pass parsing, such as 'true'.
#varnish.arg.C = true

# -n: varnishd instance to get logs from.
#varnish.arg.n = frontend


#######################################################################
#                                                                     #
# Kafka configuration                                                 #
#                                                                     #
# For the full range of Kafka handle and topic configuration          #
# properties, see:                                                    #
#  https://github.com/edenhill/librdkafka/blob/0.8-wip/rdkafka.h      #
#                                                                     #
# And the Apache Kafka configuration reference:                       #
#  http://kafka.apache.org/08/configuration.html                      #
#                                                                     #
#######################################################################

# Initial list of kafka brokers
metadata.broker.list = localhost:9091

# Maximum number of messages allowed on the local producer queue
queue.buffering.max.messages = 1000000

# Maximum number of retries per messageset.
message.send.max.retries = 3


#
# Topic configuration
#

# Topic to produce messages to
topic = varnish

# Partition (-1: random, else one of the available partitions)
partition = -1


# Required number of acks
topic.request.required.acks = 1

# Local message timeout (milliseconds)
topic.message.timeout.ms = 60000


#
# Builtin partitioners (Future. Not implemented)
#

# partition on user name
#partitioner = crc32(%u)

# partition on client IP
#partitioner = iphash(%{X-Forwarded-For}i)



