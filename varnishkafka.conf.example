######################################################################
#								     #
#		varnishkafka configuration file		      	     #
#								     #
#								     #
######################################################################
#								     #
# Format:							     #
# <property-name> = <value>					     #
#								     #
# boolean properties:						     #
#   >0, "true", "yes", "on" - interpreted as true		     #
#  everything else          - interpreted as false		     #
#								     #
######################################################################

# Where to output varnish log lines:
#  kafka  - (default) send to kafka broker
#  stdout - just print to stdout (behave like varnishncsa)
output = kafka

# Varnish log formatting
format = %l	%n	%t	%{Varnish:time_firstbyte}x	%h	%{Varnish:handling}x/%s	%b	%m	http://%{Host}i%U%q	-	%{Content-Type}o	%{Referer}i	%{X-Forwarded-For}i	%{User-agent}i	%{Accept-Language}i	%{X-Analytics}o

# Start for sequence number (%n)
# Either a number, or the string "time" which will set it to the current
# unix time in seconds multiplied by 1,000,000.
# Defaults to 0.
sequence.number = time

# FUTURE: read last sequence number from file to allow restarts
#sequence.file = /var/spool/varnishkafka.seq


#
# varnishkafka log messages configuration
# Debugging, error reporting, etc, not to be confused with varnish logs.
#

# varnishkafka log level (1 = emergencies .. 7 = debug)
log.level = 6

# specify log output
log.stderr = true
log.syslog = true



# daemonize varnishkafka (boolean)
daemonize = false


# vaktl socket path
# FIXME: not implemented
#vaktl.path = /var/run/varnishkafka.vaktl


######################################################################
#								     #
# Standard varnish VSL command line arguments			     #
#								     #
# Format:                                                            #
#  varnish.arg.<c> = <value>, where <c> is a command line option.    #
#								     #
# See varnishncsa(1) and varnishlog(1) for valid options.	     #
#								     #
######################################################################

# -m tag:regex
varnish.arg.m = RxRequest:^(?!PURGE$)

# Examples:
# -C: ignore case when matching regex
# Non-value arguments need a dummy value to pass parsing, such as 'true'.
#varnish.arg.C = true

# -n: varnishd instance to get logs from.
#varnish.arg.n = frontend


######################################################################
#								     #
# Kafka configuration                                                #
#								     #
# For the full range of Kafka handle and topic configuration         #
# properties, see:						     #
#  https://github.com/edenhill/librdkafka/blob/0.8-wip/rdkafka.h     #
#								     #
# And the Apache Kafka configuration reference:			     #
#  http://kafka.apache.org/08/configuration.html                     #
#								     #
######################################################################

# Initial list of kafka brokers
metadata.broker.list = localhost:9091

# Maximum number of messages allowed on the local producer queue
queue.buffering.max.messages = 1000000

# Maximum number of retries per messageset.
message.send.max.retries = 3


#
# Topic configuration
#

# Topic to produce messages to
topic = varnish

# Partition (-1: random, else one of the available partitions)
partition = -1


# Required number of acks
topic.request.required.acks = 1

# Local message timeout (milliseconds)
topic.message.timeout.ms = 60000


#
# Builtin partitioners (Future. Not implemented)
#

# partition on user name
#partitioner = crc32(%u)

# partition on client IP
#partitioner = iphash(%{X-Forwarded-For}i)



